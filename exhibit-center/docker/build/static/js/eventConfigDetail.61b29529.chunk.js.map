{"version":3,"sources":["compontents/column_table.tsx","routes/event/config/detail.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_styles__WEBPACK_IMPORTED_MODULE_1__","withStyles","theme","color","& span","background","root","width","border","& td, & tr","height","textAlign","& td","minWidth","name","padding-left","value","& .origin","& .green","& .circle","display","align-items","margin-right","border-radius","props","column","classes","a","createElement","className","map","row","index","key","item","colSpan","Fragment","concat","Detail","this","getConfigDetail","id","getEventLevelList","getEventTypeList","getAppCodeList","getForwardTypeList","getEventTitleList","setConfigDetail","_this$props","configDetail","eventLevelList","eventTypeList","appCodeList","forwardTypeList","locale","appName","find","code","appCode","eventTypeName","typeId","levelItem","level","canel","fwType","split","reduce","pre","cancelItem","Number","push","label","english","react__WEBPACK_IMPORTED_MODULE_7___default","react_intl__WEBPACK_IMPORTED_MODULE_12__","defaultMessage","style","antd_es_tooltip__WEBPACK_IMPORTED_MODULE_1__","placement","trigger","title","text","textEnglish","col","maxWidth","_","isArray","length","join","fwTargets","fwEnabled","createTime","_compontents_column_table__WEBPACK_IMPORTED_MODULE_10__","match","params","React","Component","overflow","whiteSpace","textOverflow","cursor","WebkitLineClamp","margin","padding","& .Component-root-42 td","fontSize","connect","_ref","_ref$event","event","eventTitleList","intl","dispatch"],"mappings":"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","file":"static/js/eventConfigDetail.61b29529.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from \"@material-ui/styles\";\ninterface IColumnItem {\n  name: string,\n  value: string | React.ReactNode,\n  colSpan?: number|string\n}\ninterface IColumn {\n  [index:number]: IColumnItem\n}\ninterface Iprops {\n  column: Array<IColumn>,\n  classes: any\n}\n\nconst styles: any = (theme: any) => {\n  const color = (color: string) => {\n    return {\n      color: color,\n      '& span': {\n        background: color\n      }\n    }\n  }\n  return ({\n    root: {\n      width: '100%',\n      border:'1px solid rgba(221,221,221,1)',\n      '& td, & tr': {\n        height: '54px',\n        border:'1px solid rgba(221,221,221,1)',\n        textAlign: 'left'\n      },\n      '& td': {\n        minWidth: '60px'\n      }\n    },\n    name: {\n      background: 'rgba(242,243,247,1)',\n      'padding-left': '20px',\n    },\n    value: {\n      'padding-left': '20px',\n      '& .origin': color('#F88B08'),\n      '& .green' : color('#02B583'),\n      '& .circle' : {\n        display: 'flex',\n        'align-items': 'center',\n        '& span': {\n          'margin-right': '5px',\n          display: 'inline-block',\n          width: '8px',\n          height: '8px',\n          'border-radius': '50%'\n        }\n      }\n    }\n  \n  })\n};\nexport default withStyles(styles)((props: Iprops) => {\n  const { column, classes } = props;\n  return(\n    <table className={classes.root}>\n      <tbody>\n        {\n          column.map((row: any, index: number) => {\n            return <tr key={index} >\n              {\n                (row).map((item: any, index: number) => {\n                  const { name, value, colSpan } = item;\n                  return <React.Fragment key={index}>\n                    <td \n                      key={`${index}-name`} \n                      className={classes.name}\n                    >{name}</td>\n                    <td \n                      key={`${index}-value`} \n                      colSpan={colSpan}\n                      className={classes.value}\n                    >{value}</td>\n                  </React.Fragment>\n                })\n              }\n            </tr> \n          })\n        }\n      </tbody>\n    </table>\n  )\n});","import React from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport Table from '../../../compontents/column_table';\nimport _ from 'lodash';\nimport { Tooltip } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nconst styles: any = (theme: any) => {\n  return {\n    col: {\n      maxWidth: 600,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      cursor: 'pointer',\n      WebkitLineClamp: 3,\n      display: \"inherit\"\n    },\n    root: {\n      margin: '20px',\n      padding: '26px 20px',\n      background: '#fff',\n      \"& .Component-root-42 td\": {\n        minWidth: '214px'\n      }\n    },\n    title: {\n      fontSize: '20px',\n      color: '#33353D',\n    },\n  }\n};\n\nclass Detail extends React.Component<any, any> {\n  get id() {\n    return this.props.match.params.id;\n  }\n  componentDidMount() {\n    this.props.getConfigDetail({ id: this.id });\n    this.props.getEventLevelList();\n    this.props.getEventTypeList();\n    this.props.getAppCodeList();\n    this.props.getForwardTypeList();\n    this.props.getEventTitleList();\n  }\n  componentWillUnmount() {\n    this.props.setConfigDetail({});\n  }\n  render() {\n    const {\n      classes,\n      configDetail,\n      eventLevelList,\n      eventTypeList,\n      appCodeList,\n      forwardTypeList,\n      locale\n    } = this.props;\n    const appName = (appCodeList.find((item: any) => item.code === configDetail.appCode) || {});\n    const eventTypeName = (eventTypeList.find((item: any) => item.id === configDetail.typeId) || {});\n    const levelItem = eventLevelList.find((item: any) => item.code === configDetail.level) || {};\n\n    let canel = configDetail.fwType;\n    if (canel && canel.split) {\n      canel = canel.split(',').reduce((pre: any, code: any) => {\n        const cancelItem = forwardTypeList.find((item: any) => item.code === Number(code));\n        if (cancelItem) {\n          pre.push(locale === 'zh'?cancelItem.label : cancelItem.english);\n        }\n        return pre;\n      }, []);\n    }\n    \n    const column: any = [\n      [\n        {\n          name: <FormattedMessage id=\"event.sourceSystem\" defaultMessage=\"Source System\" />,\n          value: locale === 'zh' ? appName.name : appName.english || ''\n        },\n        {\n          name: <FormattedMessage id=\"event.eventType\" defaultMessage=\"Event Type\" />,\n          value: locale === 'zh' ? eventTypeName.name : eventTypeName.english || ''\n        },\n        {\n          name: <FormattedMessage id=\"event.eventLevel\" defaultMessage=\"Event Level\" />,\n          value: <div className=\"circle\">\n            <span style={{ background: levelItem.color }} ></span>\n            {locale === 'zh' ? levelItem.label : levelItem.english || ''}\n          </div>\n        },\n      ],\n      [\n        {\n          name: <FormattedMessage id=\"event.messageTemplate\" defaultMessage=\"SMS Template\" />,\n          value: <Tooltip placement=\"topLeft\"\n            trigger=\"click\"\n            title={locale === 'zh' ? configDetail.text : configDetail.textEnglish}>\n            <span className={`${classes.col}`} style={{ maxWidth: \"1000px\" }}>\n              {locale === 'zh' ? configDetail.text : configDetail.textEnglish}\n            </span>\n          </Tooltip>,\n          colSpan: '5'\n        }\n      ],\n      [\n        {\n          name: <FormattedMessage id=\"event.notificationChannel\" defaultMessage=\"Notification Channel\" />,\n          value: (_.isArray(canel) && canel.length > 0) ? canel.join(',') : configDetail.fwType,\n        },\n        {\n          name: <FormattedMessage id=\"event.notificationObject\" defaultMessage=\"Notification Object\" />,\n          value:\n            <Tooltip placement=\"topLeft\"\n              trigger=\"click\"\n              title={configDetail.fwTargets}>\n              <span className={`${classes.col}`}>\n                {configDetail.fwTargets}\n              </span>\n            </Tooltip>,\n          colSpan: 3\n        }\n      ],\n      [\n        {\n          name: <FormattedMessage id=\"event.whetherPushIsEnabled\" defaultMessage=\"Enable Push\" />,\n          value: configDetail.fwEnabled ? (locale === 'zh' ? '推送' : 'Push') : (locale === 'zh' ? '不推送' : 'No Push'),\n        },\n        {\n          name: <FormattedMessage id=\"event.creationTime\" defaultMessage=\"Creation Time\" />,\n          value: configDetail.createTime,\n          colSpan: 4\n        }\n      ]\n    ]\n    return (\n      <div className={classes.root}>\n        <h3 className={classes.title}><FormattedMessage id=\"order.basicInformation\" defaultMessage=\"Basic information\" /></h3>\n        <div>\n          <Table column={column} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState2Props = ({ event: { configDetail, eventLevelList, eventTypeList, appCodeList, forwardTypeList, eventTitleList }, intl: { locale } }: any) => ({\n  configDetail, eventLevelList, eventTypeList, appCodeList, forwardTypeList, eventTitleList, locale\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return dispatch.event;\n}\nexport default withStyles(styles)(connect(mapState2Props, mapDispatchToProps)(Detail));"],"sourceRoot":""}