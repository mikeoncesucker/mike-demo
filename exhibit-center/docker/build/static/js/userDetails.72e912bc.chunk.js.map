{"version":3,"sources":["../node_modules/rc-util/es/Children/toArray.js","routes/user_mgr/details.tsx"],"names":["__webpack_require__","d","__webpack_exports__","toArray","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","children","ret","a","Children","forEach","c","push","Details","props","_this","Object","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","call","onExpand","expandedKeys","setState","autoExpandParent","renderTreeNodes","data","map","item","react__WEBPACK_IMPORTED_MODULE_9___default","createElement","antd_es_tree__WEBPACK_IMPORTED_MODULE_3__","TreeNode","title","name","key","id","dataRef","getBisiness","user","userId","cb","code","getRoleByUserId","businessSystem","identifier","businessSystemList","bisiness","_this$props","getResourcesByRole","state","role","roleList","roleId","resources","_this2","_this$props2","location","getUserByUserId","sessionStorage","setItem","getItem","_this$props3","resetUsers","resetBisinesss","resetRoles","_this3","_this$props4","classes","_this$state","className","root","react_intl__WEBPACK_IMPORTED_MODULE_12__","defaultMessage","table","antd_es_tooltip__WEBPACK_IMPORTED_MODULE_1__","account","placement","gender","mobile","birthday","idcard","work","organization","manager","entryDate","status","style","display","backgroundColor","borderRadius","width","height","margin","tableLayout","tdContent","value","lineHeight","borderBottom","overflow","whiteSpace","textOverflow","cursor","undefined","onClick","length","index","React","Component","withStyles","theme","padding","fontSize","color","& th","fontWeight","& thead> tr","& td, & th","border","textIndent","& .lable","float","borderRight","& .value","& > ul","transform","connect","_ref","_ref$bisiness","_ref2","_ref2$user","_ref2$bisiness","getRoleByBisiness","resetResourcess"],"mappings":"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","file":"static/js/userDetails.72e912bc.chunk.js","sourcesContent":["import React from 'react';\nexport default function toArray(children) {\n  var ret = [];\n  React.Children.forEach(children, function (c) {\n    ret.push(c);\n  });\n  return ret;\n}","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport { Tree, Tooltip } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface DetailsProps {\n  classes: any;\n  location: any;\n  match: any;\n  getUserByUserId: Function;\n  user: any;\n  bisiness: any;\n  getBisiness: Function;\n  role: any;\n  getRoleByBisiness: Function;\n  getResourcesByRole: Function;\n  resetUsers: Function;\n  resetBisinesss: Function;\n  getRoleByUserId: Function;\n  resetRoles: Function;\n  resetResourcess: Function;\n}\n\nconst styles: any = (theme: any) => ({\n  root: {\n    margin: \"20px\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"30px 20px\"\n  },\n  title: {\n    fontSize: \"16px\",\n    color: \"#33353D\"\n  },\n  table: {\n    width: \"100%\",\n    \"& th\": {\n      fontWeight: \"normal\",\n      height: \"54px\",\n      color: \"#33353D\",\n      backgroundColor: \"rgba(250,250,252,1)\"\n    },\n    \"& thead> tr\": {\n      height: \"54px\"\n    },\n    \"& td, & th\": {\n      width: \"33.33%\",\n      padding: \"0\",\n      border: \"1px solid rgba(204,204,204,1)\",\n      height: \"40px\",\n      lineHeight: \"40px\",\n      textIndent: \"15px\",\n      \"& .lable\": {\n        float: \"left\",\n        width: \" 44%\",\n        backgroundColor: \"rgba(250,250,252,1)\",\n        borderRight: \"1px solid rgba(204,204,204,1)\"\n      },\n      \"& .value\": {\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\"\n      }\n    }\n  },\n  tdContent: {\n    height: \"350px\",\n    overflow: \"auto\",\n    \"& > ul\": {\n      transform: \"translateX(-30px)\"\n    }\n  },\n  item: {\n    backgroundColor: \"rgba(8,171,248,0.2)\"\n  }\n});\n\nclass Details extends React.Component<DetailsProps, any> {\n  constructor(props: Readonly<DetailsProps>) {\n    super(props);\n    this.state = {\n      businessSystem: null,\n      businessSystemList: null,\n      role: null,\n      roleList: [],\n      expandedKeys: [],\n      autoExpandParent: true,\n      resources: []\n    };\n  }\n\n  onExpand = (expandedKeys: any) => {\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false\n    });\n  };\n\n  renderTreeNodes = (data: any) =>\n    data.map((item: any) => {\n      if (item.children) {\n        return (\n          <Tree.TreeNode title={item.name} key={item.id} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </Tree.TreeNode>\n        );\n      }\n      return <Tree.TreeNode title={item.name} key={item.id} />;\n    });\n\n  componentWillMount() {\n    const { location, getUserByUserId } = this.props;\n    if (location.state) {\n      sessionStorage.setItem(\"userId\", location.state.id);\n    }\n\n    getUserByUserId({\n      userId: sessionStorage.getItem(\"userId\"),\n      cb: (data: any) => {\n        this.getBisiness(data);\n      }\n    });\n  }\n\n  getBisiness = (user: any) => {\n    const { getBisiness } = this.props;\n    getBisiness({\n      userId: user.id,\n      cb: (data: any) => {\n        if (data.code === \"200\") {\n          this.getRoleByUserId(data.data[0]);\n          this.setState({\n            businessSystem: data.data[0].identifier,\n            businessSystemList: data.data\n          });\n        }\n      }\n    });\n  };\n\n  getRoleByUserId = (bisiness: any) => {\n    const { getRoleByUserId, user } = this.props;\n    getRoleByUserId({\n      userId: user ? user.id : null,\n      bisiness: bisiness.identifier,\n      cb: (data: any) => {\n        if (data) {\n          this.getResourcesByRole(this.state.businessSystem, data[0].id);\n          this.setState({\n            role: data[0].id,\n            roleList: data || []\n          });\n        }\n      }\n    });\n  };\n\n  getResourcesByRole = (bisiness: string, roleId: string) => {\n    const { getResourcesByRole } = this.props;\n    getResourcesByRole({\n      bisiness,\n      roleId,\n      cb: (data: any) => {\n        this.setState({\n          resources: data.data.children || [],\n        });\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    const { resetUsers, resetBisinesss, resetRoles } = this.props;\n    resetUsers();\n    resetBisinesss();\n    resetRoles();\n  }\n\n  render() {\n    const { classes, user } = this.props;\n    const { businessSystemList, roleList, resources } = this.state;\n    if (!user) return <div />;\n    return (\n      <div>\n        <div className={classes.root}>\n          <p className={classes.title}>\n            <FormattedMessage\n              id=\"user.detail.basicInformation\"\n              defaultMessage=\"Basic information\"\n            />\n          </p>\n          <table className={classes.table}>\n            <tbody>\n              <tr>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.userName\"\n                      defaultMessage=\"User name\"\n                    />\n                  </div>\n                  <div className=\"value\">\n                    <Tooltip title={user.name}>{user.name}</Tooltip>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.userAccount\"\n                      defaultMessage=\"User account\"\n                    />\n                  </div>\n                  <div className=\"value\">\n                    <Tooltip title={user.account} placement=\"topLeft\">\n                      {user.account}\n                    </Tooltip>\n                  </div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.sex\"\n                      defaultMessage=\"Gender\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.gender}</div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.cellphoneNumber\"\n                      defaultMessage=\"Telephone\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.mobile}</div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.birthdate\"\n                      defaultMessage=\"Date of birth\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.birthday}</div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.IdNumber\"\n                      defaultMessage=\"ID number\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.idcard}</div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.quarters\"\n                      defaultMessage=\"Position\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.work}</div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.organisation\"\n                      defaultMessage=\"Organization\"\n                    />\n                  </div>\n                  <div className=\"value\">\n                    {user.organization && user.organization.name}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.organizationLeader\"\n                      defaultMessage=\"Organization leader\"\n                    />\n                  </div>\n                  <div className=\"value\">\n                    {(user.organization && user.organization.manager.name) ||\n                      \"--\"}\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.hireDate\"\n                      defaultMessage=\"Entry date\"\n                    />\n                  </div>\n                  <div className=\"value\">{user.entryDate}</div>\n                </td>\n                <td>\n                  <div className=\"lable\">\n                    <FormattedMessage\n                      id=\"user.detail.accountStatus\"\n                      defaultMessage=\"Account status\"\n                    />\n                  </div>\n                  <div className=\"value\">\n                    {user.status ? (\n                      <span>\n                        <span\n                          style={{\n                            display: \"inline-block\",\n                            backgroundColor: \"#27DA99\",\n                            borderRadius: \"50%\",\n                            width: \"6px\",\n                            height: \"6px\",\n                            margin: \"0 2px 2px\"\n                          }}\n                        />\n                        <FormattedMessage\n                          id=\"user.detail.enable\"\n                          defaultMessage=\"Enabled\"\n                        />\n                      </span>\n                    ) : (\n                      <span>\n                        <span\n                          style={{\n                            display: \"inline-block\",\n                            backgroundColor: \"orange\",\n                            borderRadius: \"50%\",\n                            width: \"6px\",\n                            height: \"6px\",\n                            margin: \"0 2px 2px\"\n                          }}\n                        />\n                        <FormattedMessage\n                          id=\"user.detail.disable\"\n                          defaultMessage=\"Disabled\"\n                        />\n                      </span>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className={classes.root}>\n          <p className={classes.title}>\n            <FormattedMessage\n              id=\"user.detail.roleInformation\"\n              defaultMessage=\"Role information\"\n            />\n          </p>\n\n          <table\n            className={classes.table}\n            style={{\n              tableLayout: \"fixed\"\n            }}\n          >\n            <thead>\n              <tr>\n                <th>\n                  <FormattedMessage\n                    id=\"user.detail.businessSystem\"\n                    defaultMessage=\"Business system\"\n                  />\n                </th>\n                <th>\n                  <FormattedMessage\n                    id=\"user.detail.role\"\n                    defaultMessage=\"Role\"\n                  />\n                </th>\n                <th>\n                  <FormattedMessage\n                    id=\"user.detail.resourceAuthority\"\n                    defaultMessage=\"Resource permissions\"\n                  />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <div className={classes.tdContent}>\n                    {!businessSystemList ? (\n                      <FormattedMessage\n                        id=\"user.detail.notAccessibleAccessibleBusinessSystem\"\n                        defaultMessage=\"No results found\"\n                      />\n                    ) : (\n                      businessSystemList.map((value: any) => {\n                        return (\n                          <div\n                            style={{\n                              height: \"54px\",\n                              lineHeight: \"54px\",\n                              borderBottom: \"1px solid rgba(204,204,204,1)\",\n                              overflow: \"hidden\",\n                              whiteSpace: \"nowrap\",\n                              textOverflow: \"ellipsis\",\n                              cursor: \"pointer\"\n                            }}\n                            key={value.id}\n                            className={\n                              this.state.businessSystem === value.identifier\n                                ? classes.item\n                                : undefined\n                            }\n                            onClick={() => {\n                              this.setState({\n                                businessSystem: value.identifier,\n                                roleList: [],\n                                resources: []\n                              });\n                              this.getRoleByUserId(value);\n                            }}\n                          >\n                            <Tooltip title={value.name}>{value.name}</Tooltip>\n                          </div>\n                        );\n                      })\n                    )}\n                  </div>\n                </td>\n                <td>\n                  <div className={classes.tdContent}>\n                    {roleList.length === 0 && (\n                      <div>\n                        <FormattedMessage\n                          id=\"user.detail.noData\"\n                          defaultMessage=\"NO data\"\n                        />\n                      </div>\n                    )}\n                    {roleList.map((value: any, index: number) => {\n                      return (\n                        <div\n                          style={{\n                            height: \"54px\",\n                            lineHeight: \"54px\",\n                            borderBottom: \"1px solid rgba(204,204,204,1)\",\n                            overflow: \"hidden\",\n                            whiteSpace: \"nowrap\",\n                            textOverflow: \"ellipsis\",\n                            cursor: \"pointer\"\n                          }}\n                          key={index}\n                          className={\n                            this.state.role === value.id\n                              ? classes.item\n                              : undefined\n                          }\n                          onClick={() => {\n                            this.setState({ role: value.id, resources: [] });\n                            this.getResourcesByRole(\n                              this.state.businessSystem,\n                              value.id\n                            );\n                          }}\n                        >\n                          <Tooltip title={value.name}>{value.name}</Tooltip>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </td>\n                <td>\n                  <div className={classes.tdContent}>\n                    {resources.length === 0 && (\n                      <div>\n                        <FormattedMessage\n                          id=\"user.detail.noData\"\n                          defaultMessage=\"NO data\"\n                        />\n                      </div>\n                    )}\n                    <Tree\n                      onExpand={this.onExpand}\n                      expandedKeys={this.state.expandedKeys}\n                      autoExpandParent={this.state.autoExpandParent}\n                    >\n                      {this.renderTreeNodes(resources)}\n                    </Tree>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState2Props = ({\n  user: { user },\n  bisiness: { bisiness, role }\n}: any) => ({\n  user,\n  bisiness,\n  role\n});\n\nconst mapDispatch2Props = ({\n  user: { getUserByUserId, resetUsers, getRoleByUserId },\n  bisiness: {\n    getBisiness,\n    getRoleByBisiness,\n    getResourcesByRole,\n    resetBisinesss,\n    resetRoles,\n    resetResourcess\n  }\n}: any) => ({\n  getUserByUserId,\n  getRoleByUserId,\n  getBisiness,\n  getRoleByBisiness,\n  getResourcesByRole,\n  resetUsers,\n  resetBisinesss,\n  resetRoles,\n  resetResourcess\n});\n\nexport default withStyles(styles)(\n  connect(\n    mapState2Props,\n    mapDispatch2Props\n  )(Details)\n);\n"],"sourceRoot":""}