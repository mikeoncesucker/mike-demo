{"version":3,"sources":["routes/resource_and_role_mgr/authorization/authorization_edit.tsx"],"names":["AuthorizationEdit","props","_this","Object","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_14__","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_15__","call","showModal","formObj","form","getFieldsValue","roleInfo","edited","key","setState","visible","goBack","hideModal","_this$props","history","location","push","state","handleSubmit","e","preventDefault","validateFields","err","values","params","description","name","pathname","indexOf","editRole","identifier","sessionStorage","getItem","id","cb","addRole","formData","_this$props2","queryRoleById","setItem","resetRoleInfos","_this$props3","classes","getFieldDecorator","assign","react__WEBPACK_IMPORTED_MODULE_17___default","a","createElement","className","root","react_intl__WEBPACK_IMPORTED_MODULE_20__","defaultMessage","title","antd_es_form__WEBPACK_IMPORTED_MODULE_9__","onSubmit","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_7__","span","Item","label","initialValue","rules","max","message","required","whitespace","antd_es_input__WEBPACK_IMPORTED_MODULE_11__","TextArea","rows","button","antd_es_modal__WEBPACK_IMPORTED_MODULE_3__","onOk","onCancel","okText","cancelText","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","onClick","type","htmlType","React","Component","__webpack_exports__","create","withStyles","theme","margin","backgroundColor","padding","fontSize","color","& button","float","marginLeft","connect","_ref","resource_and_role","_ref2","_ref2$resource_and_ro"],"mappings":"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","file":"static/js/authorizationEdit.9020690a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { withStyles } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport { Form, Row, Col, Input, Button, Modal } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface authorizationEditProps {\n  classes: any;\n  history: any;\n  location: any;\n  form: any;\n  addRole: any;\n  editRole: any;\n  queryRoleById: any;\n  roleInfo: any;\n  resetRoleInfos: Function;\n}\n\nconst styles: any = (theme: any) => ({\n  root: {\n    margin: \"20px\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"30px 20px\"\n  },\n  title: {\n    fontSize: \"16px\",\n    color: \"#33353D\"\n  },\n  button: {\n    \"& button\": {\n      float: \"right\",\n      marginLeft: \"12px\"\n    }\n  }\n});\n\nclass AuthorizationEdit extends React.Component<authorizationEditProps, any> {\n  constructor(props: Readonly<authorizationEditProps>) {\n    super(props);\n    this.state = {\n      formData: {\n        name: '',\n        description: ''\n      }\n    };\n  }\n\n  showModal = () => {\n    const formObj = this.props.form.getFieldsValue();\n    const { roleInfo } = this.props;\n    let edited: boolean = false;\n    for (let key in formObj) {\n      if (formObj[key] !== roleInfo[key]) {\n        edited = true;\n        this.setState({\n          visible: true\n        });\n      }\n    }\n    if (!edited) {\n      this.goBack();\n    }\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  goBack = () => {\n    const { history, location } = this.props;\n    history.push(\"./\", location.state);\n  };\n\n  handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const { location } = this.props;\n    this.props.form.validateFields((err: any, values: any) => {\n      if (!err) {\n        let params = {\n          description: values.description,\n          name: values.name\n        };\n        if (location.pathname.indexOf('edit') > 0) {\n          const { editRole } = this.props;\n          editRole({\n            identifier: sessionStorage.getItem(\"roleIdentifier\"),\n            id: sessionStorage.getItem(\"roleId\"),\n            params,\n            cb: () => {\n              this.goBack();\n            }\n          });\n        } else {\n          const { addRole } = this.props;\n          addRole({\n            identifier: sessionStorage.getItem(\"roleIdentifier\"),\n            params,\n            cb: () => {\n              this.goBack();\n            }\n          });\n        }\n      }\n    });\n  };\n\n  componentWillMount() {\n    const { queryRoleById, location } = this.props;\n    if (location.pathname.indexOf('edit') > 0) {\n      if (location.state) {\n        sessionStorage.setItem(\"roleId\", location.state.id);\n      }\n      queryRoleById({\n        identifier: sessionStorage.getItem(\"roleIdentifier\"),\n        id: sessionStorage.getItem(\"roleId\"),\n        cb: null\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const { resetRoleInfos } = this.props;\n    resetRoleInfos();\n  }\n\n  render() {\n    const { classes, form, roleInfo, location } = this.props;\n    const { getFieldDecorator } = form;\n\n    let formData = [];\n    if (location.state) {\n      formData = Object.assign({}, roleInfo);\n    }\n    return (\n      <div className={classes.root}>\n        <p>\n          <FormattedMessage\n            id=\"role.authorizeBusinessSystem\"\n            defaultMessage=\"Authorize business system\"\n          />\n        </p>\n        <p>\n          {sessionStorage.getItem(\"sysName\")} / <span>{sessionStorage.getItem(\"path\")}</span>\n        </p>\n        <br />\n        <p className={classes.title}>\n          <FormattedMessage id=\"role.baseInfo\" defaultMessage=\"Basic information\" />\n        </p>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Row gutter={48}>\n            <Col span={10}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.roleName\"\n                    defaultMessage=\"RoleName\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"name\", {\n                  initialValue: formData.name,\n                  rules: [\n                    {\n                      max: 32,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.nameVerify\"\n                          defaultMessage=\"Role name max length is 32\"\n                        />\n                      )\n                    },\n                    {\n                      required: true,\n                      whitespace: true,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.inputRoleName\"\n                          defaultMessage=\"Please enter role name\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n            <Col span={10}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.Description\"\n                    defaultMessage=\"Role desciption\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"description\", {\n                  initialValue: formData.description,\n                  rules: [\n                    {\n                      max: 100,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.descVerify\"\n                          defaultMessage=\"Role description max length is 100\"\n                        />\n                      )\n                    },\n                    {\n                      required: false,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.inputRoleDescription\"\n                          defaultMessage=\"please input inputRoleDescription\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input.TextArea rows={3} />)}\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item className={classes.button}>\n            <Modal\n              title={\n                <FormattedMessage\n                  id=\"role.confirmExitEditing\"\n                  defaultMessage=\"Confirm to exit editing?\"\n                />\n              }\n              visible={this.state.visible}\n              onOk={this.goBack}\n              onCancel={this.hideModal}\n              okText={\n                <FormattedMessage id=\"role.confirm\" defaultMessage=\"Confirm\" />\n              }\n              cancelText={\n                <FormattedMessage id=\"role.cancel\" defaultMessage=\"Cancal\" />\n              }\n            >\n              <p>\n                <FormattedMessage\n                  id=\"role.exitMsg\"\n                  defaultMessage=\"All data will remain unchanged after exiting\"\n                />\n              </p>\n            </Modal>\n            <Button onClick={this.showModal}>\n              <FormattedMessage id=\"role.cancel\" defaultMessage=\"Cancal\" />\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              <FormattedMessage id=\"role.confirm\" defaultMessage=\"Confirm\" />\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapState2Props = ({ resource_and_role: { roleInfo } }: any) => ({\n  roleInfo\n});\n\nconst mapDispatch2Props = ({\n  resource_and_role: { addRole, editRole, queryRoleById, resetRoleInfos }\n}: any) => ({\n  addRole,\n  editRole,\n  queryRoleById,\n  resetRoleInfos\n});\n\nexport default Form.create()(\n  withStyles(styles)(\n    connect(\n      mapState2Props,\n      mapDispatch2Props\n    )(AuthorizationEdit)\n  )\n);\n"],"sourceRoot":""}