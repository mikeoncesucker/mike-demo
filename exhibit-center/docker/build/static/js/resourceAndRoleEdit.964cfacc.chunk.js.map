{"version":3,"sources":["routes/resource_and_role_mgr/edit.tsx"],"names":["Edit","props","_this","Object","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_14__","_Users_edz_Desktop_exhibit_center_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_15__","call","showModal","setState","visible","hideModal","goBack","_this$props","history","location","push","state","handleSubmit","e","preventDefault","_this$props2","editBusiSys","form","validateFields","err","values","params","createdAt","description","id","name","path","identifier","sessionStorage","getItem","privateKey","publicKey","status","updatedAt","cb","addBusiSys","_this$props3","querySysById","resetSysInfos","_this$props4","classes","sysInfo","getFieldDecorator","formData","assign","react__WEBPACK_IMPORTED_MODULE_17___default","a","createElement","className","root","title","react_intl__WEBPACK_IMPORTED_MODULE_20__","defaultMessage","antd_es_form__WEBPACK_IMPORTED_MODULE_9__","onSubmit","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","gutter","antd_es_col__WEBPACK_IMPORTED_MODULE_7__","span","Item","label","initialValue","rules","required","message","antd_es_input__WEBPACK_IMPORTED_MODULE_11__","disabled","undefined","TextArea","rows","button","antd_es_modal__WEBPACK_IMPORTED_MODULE_3__","onOk","onCancel","okText","cancelText","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","type","onClick","htmlType","React","Component","__webpack_exports__","create","withStyles","theme","margin","backgroundColor","padding","fontSize","color","& button","float","marginLeft","connect","_ref","resource_and_role","_ref2","_ref2$resource_and_ro"],"mappings":"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","file":"static/js/resourceAndRoleEdit.964cfacc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { withStyles } from \"@material-ui/styles\";\nimport { connect } from \"react-redux\";\nimport { Form, Row, Col, Input, Button, Modal } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface EditProps {\n  classes: any;\n  history: any;\n  match: any;\n  form: any;\n  addBusiSys: any;\n  editBusiSys: any;\n  querySysById: any;\n  resetSysInfos: Function;\n  sysInfo: any;\n  location: any;\n}\n\nconst styles: any = (theme: any) => ({\n  root: {\n    margin: \"20px\",\n    backgroundColor: \"#FFFFFF\",\n    padding: \"30px 20px\"\n  },\n  title: {\n    fontSize: \"16px\",\n    color: \"#33353D\"\n  },\n  button: {\n    \"& button\": {\n      float: \"right\",\n      marginLeft: \"12px\"\n    }\n  }\n});\n\nclass Edit extends React.Component<EditProps, any> {\n  constructor(props: Readonly<EditProps>) {\n    super(props);\n    this.state = {};\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  goBack = () => {\n    const { history, location } = this.props;\n    history.push(\"./\", location.state);\n  };\n\n  handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const { editBusiSys, location } = this.props;\n    this.props.form.validateFields((err: any, values: any) => {\n      if (!err) {\n        let params = {\n          createdAt: \"\",\n          description: values.description,\n          id: values.id,\n          name: values.name,\n          path: values.path,\n          identifier: sessionStorage.getItem(\"roleIdentifier\"),\n          privateKey: \"\",\n          publicKey: \"\",\n          status: 0,\n          updatedAt: \"\"\n        };\n        if (location.state) {\n          editBusiSys({\n            id: sessionStorage.getItem(\"roleId\"),\n            params,\n            cb: () => {\n              this.goBack();\n            }\n          });\n        } else {\n          const { addBusiSys } = this.props;\n          addBusiSys({\n            params,\n            cb: () => {\n              this.goBack();\n            }\n          });\n        }\n      }\n    });\n  };\n\n  componentWillMount() {\n    const { querySysById, location } = this.props;\n    if (location.state) {\n      querySysById({ id: sessionStorage.getItem(\"roleId\"), cb: null });\n    }\n  }\n\n  componentWillUnmount() {\n    const { resetSysInfos } = this.props;\n    resetSysInfos();\n  }\n\n  render() {\n    const { classes, form, sysInfo, location } = this.props;\n    const { getFieldDecorator } = form;\n    let formData = [];\n    if (location.state) {\n      formData = Object.assign({}, sysInfo);\n    }\n    return (\n      <div className={classes.root}>\n        <p className={classes.title}>\n          <FormattedMessage id=\"role.baseInfo\" defaultMessage=\"Basic information\" />\n        </p>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Row gutter={24}>\n            <Col span={8}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.businessSystemName\"\n                    defaultMessage=\"Business system name\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"name\", {\n                  initialValue: formData.name,\n                  rules: [\n                    {\n                      required: true,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.inputBusinessSystemName\"\n                          defaultMessage=\"Please enter business system name\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.businessSystemId\"\n                    defaultMessage=\"Business system ID\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"id\", {\n                  initialValue: formData.id,\n                  rules: [\n                    {\n                      required: true,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.inputBusinessSystemId\"\n                          defaultMessage=\"Please enter business system ID\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input disabled={location.state !== undefined} />)}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.resourceEnterAddress\"\n                    defaultMessage=\"Resource access address\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"path\", {\n                  initialValue: formData.path,\n                  rules: [\n                    {\n                      required: true,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.inputUsername\"\n                          defaultMessage=\"Please enter resource enter address!\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input />)}\n              </Form.Item>\n            </Col>\n\n            <Col span={8}>\n              <Form.Item\n                label={\n                  <FormattedMessage\n                    id=\"role.businessSystemDescription\"\n                    defaultMessage=\"Resource access address\"\n                  />\n                }\n              >\n                {getFieldDecorator(\"description\", {\n                  initialValue: formData.description,\n                  rules: [\n                    {\n                      required: false,\n                      message: (\n                        <FormattedMessage\n                          id=\"role.businessSystemDescription\"\n                          defaultMessage=\"Please enter business system description!\"\n                        />\n                      )\n                    }\n                  ]\n                })(<Input.TextArea rows={4} />)}\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Form.Item className={classes.button}>\n            <Modal\n              title={\n                <FormattedMessage\n                  id=\"role.confirmExitEditing\"\n                  defaultMessage=\"Confirm to exit editing?\"\n                />\n              }\n              visible={this.state.visible}\n              onOk={this.goBack}\n              onCancel={this.hideModal}\n              okText={\n                <FormattedMessage id=\"role.confirm\" defaultMessage=\"Confirm\" />\n              }\n              cancelText={\n                <FormattedMessage id=\"role.cancel\" defaultMessage=\"Cancal\" />\n              }\n            >\n              <p>\n                <FormattedMessage\n                  id=\"role.exitMsg\"\n                  defaultMessage=\"The editing content will restore the default after exiting\"\n                />\n              </p>\n            </Modal>\n            <Button type=\"primary\" onClick={this.showModal}>\n              <FormattedMessage id=\"role.cancel\" defaultMessage=\"Cancal\" />\n            </Button>\n            <Button type=\"primary\" htmlType=\"submit\">\n              <FormattedMessage id=\"role.confirm\" defaultMessage=\"Confirm\" />\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapState2Props = ({ resource_and_role: { sysInfo } }: any) => ({\n  sysInfo\n});\n\nconst mapDispatch2Props = ({\n  resource_and_role: { addBusiSys, editBusiSys, querySysById, resetSysInfos }\n}: any) => ({\n  addBusiSys,\n  editBusiSys,\n  querySysById,\n  resetSysInfos\n});\n\nexport default Form.create()(\n  withStyles(styles)(\n    connect(\n      mapState2Props,\n      mapDispatch2Props\n    )(Edit)\n  )\n);\n"],"sourceRoot":""}