{"version":3,"sources":["../node_modules/antd/es/divider/style/index.js","../node_modules/antd/es/divider/index.js","routes/order_mgr/exh_loop.tsx","routes/order_mgr/exh_bar.tsx","routes/order_mgr/linebar_charts.tsx","routes/order_mgr/order_exh_anal.tsx"],"names":["__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","n","_config_provider__WEBPACK_IMPORTED_MODULE_2__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","__rest","s","e","t","p","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__webpack_exports__","props","_ref","_classNames","getPrefixCls","customizePrefixCls","prefixCls","_props$type","type","_props$orientation","orientation","className","children","dashed","restProps","orientationPrefix","classString","concat","ExhLoop","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","formatNum","num","replace","state","_this2","Html","Guide","DataView","DataSet","data","locale","totalCounts","totalCountsHtml","dv","JSON","stringify","transform","field","dimension","as","react_default","a","createElement","BizCharts","height","scale","percent","formatter","val","toFixed","padding","forceFit","radius","innerRadius","name","position","offsetX","marker","useHtml","itemTpl","item","color","isShow","index","_enWidth","_itemWidth","_item","_percentage","_amounts","html","alignX","alignY","select","active","style","lineWidth","stroke","minHeight","textAlign","lineHeight","React","Component","ExhBar","map","time","trim","counts","minTickInterval","transpose","label","offset","line","fill","containerTpl","size","tooltip","amounts","orderExpoAnalysisSourcesVos","orderExpoAnalysisSourcesVosString","forEach","sourceName","styles","theme","wrapper","marginLeft","marginRight","mainTitle","fontSize","display","subTitle","LineBarCharts","totalAmounts","min","alias","ticks","title","grid","offsetY","window","innerHeight","enterable","orderExpoGeneralDetailVos","expoName","Option","Orderanal","chooseYear","_this$props","getExhList","params","year","exhYear","cb","exhList","setState","exhNameList","defaultExhName","getOverviewInfo","exhOverview","exhOverviewYear","exhOverviewInfo","exhOverviewData","getExhTimesData","selectYear","month","selectMonth","exhTotalTimes","expoCounts","exhTotalAmount","expoAmounts","exhTotalAmountPrecent","percentage","maxTotalAmount","expoHisAmounts","expoGeneral","orderExpoGeneralVos","getOrderAnalyseData","exhAnalysis","exhAnalysisInfo","orderExpoAnalysisItemsVos","orderExpoAnalysisTrendsVos","selectExhName","exhName","setCurrYear","currDate","Date","currMonth","getMonth","getFullYear","setCurrMonth","currYear","_this$props2","_this$state","date","_this3","_this$props3","classes","_this$state2","monthArr","root","alignItems","marginBottom","borderBottom","index_es","id","defaultMessage","es_select","placeholder","getPopupContainer","triggerNode","width","defaultValue","onChange","boldNum","divider","DonutPanelGroup","rootDonutPanel","margin","exh_bar","justifyContent","marginTop","background","borderRadius","exh_loop","textDecoration","paddingLeft","icon","top","left","linebar_charts","withStyles","backgroundColor","& .HeaderInfoBox","& .headerDivider","chartsOption","radioItem","& .ant-radio-button-wrapper","minWidth","selected","unselected","increase","& span i","connect","_ref$exh","exh","exhTimesData","intl","_ref2","_ref2$exh"],"mappings":"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","file":"static/js/orderExhAnalyse.2639b4f9.chunk.js","sourcesContent":["import '../../style/index.less';\nimport './index.less';","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Divider = function Divider(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? '-' + orientation : orientation;\n    var classString = classNames(className, prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), children), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _classNames));\n    return React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps), children && React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nexport default Divider;","import React from \"react\";\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Coord,\n  Legend,\n  Guide,\n} from \"bizcharts\";\nimport DataSet from \"@antv/data-set\";\n\nexport interface ExhLoopProps {\n  data: [];\n  locale: any;\n  totalCounts: null;\n}\n\nclass ExhLoop extends React.Component<ExhLoopProps, any> {\n  constructor(props: Readonly<ExhLoopProps>) {\n    super(props);\n    this.state = {};\n  }\n  // 金额格式化\n  formatNum = (num: any) => {\n    return (num + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  render() {\n    const { Html } = Guide;\n    const { DataView } = DataSet;\n    const data = this.props.data || [];\n    const { locale } = this.props; \n    const totalCounts = this.props.totalCounts || 0;\n    const totalCountsHtml = `<div style=color:#8c8c8c;font-size:1em;display:flex;flex-direction:column;justify-content:center;align-items:center;width:10em;height:10em;>${ locale === \"en\" ? \"Number of orders\" : \"订单数量(单)\" }<br><div style=color:#262626;font-size:2.5em;>${totalCounts}</div></div>`;\n    const dv = new DataView();\n    if (JSON.stringify(data).indexOf('\"item\"') !== -1) {\n      dv.source(data).transform({\n        type: \"percent\",\n        field: \"percentage\",\n        dimension: \"item\",\n        as: \"percent\"\n      });\n    } else {\n      dv.source(data).transform({\n        type: \"percent\",\n        field: \"percentage\",\n        dimension: \"source\",\n        as: \"percent\"\n      });\n    }\n    const cols = {\n      percent: {\n        formatter: (val: any) => {\n          val = (val * 100).toFixed(0) + \"%\";\n          return val;\n        }\n      }\n    };\n\n    return (\n      <div>\n        {data.length ? (\n          <Chart\n            height={330}\n            data={dv}\n            scale={cols}\n            padding={ locale === \"en\" ? [30, 0, 30, -300] : [30, 0, 30, -250] }\n            forceFit\n          >\n            <Coord type={\"theta\"} radius={0.75} innerRadius={0.6} />\n            <Axis name=\"percent\" />\n            <Legend\n              position=\"right-center\"\n              offsetX={ locale === \"en\" ? -150 : -135 }\n              marker=\"square\"\n              useHtml={true}\n              itemTpl={(item: any, color: any, isShow: any, index: any) => {\n                let _enWidth = (locale === \"en\" ? 270 : 230);\n                let _itemWidth = (locale === \"en\" ? \"32%\" : \"23%\");\n                let _item =\n                  data[index] &&\n                  ((data[index][\"item\"] === \"0\" && ( locale === \"en\" ? \"Commodity&nbsp;Lease&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" : \"租赁商品\")) ||\n                    (data[index][\"item\"] === \"1\" && ( locale === \"en\" ? \"Service&nbsp;Lease&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" : \"租赁服务\")) ||\n                    (data[index][\"item\"] === \"2\" && ( locale === \"en\" ? \"Commodity&nbsp;Purchase\" : \"购买商品\")) ||\n                    (data[index][\"item\"] === \"3\" && ( locale === \"en\" ? \"Service&nbsp;Purchase&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" : \"购买服务\")) ||\n                    (data[index][\"item\"] === \"9\" && ( locale === \"en\" ? \"Others\" : \"其他&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\")) ||\n                    data[index][\"item\"]);\n                let _percentage =\n                  data[index] && data[index][\"percentage\"] + \"%\";\n                let _amounts =\n                  data[index] && \"￥\" + this.formatNum(data[index][\"amounts\"]);\n                return `<li class=\"g2-legend-list-item item-{index} {checked}\" data-color=\"{originColor}\" data-value=\"{originValue}\" style=\"min-width: ${_enWidth}px;cursor: pointer;font-size: 10px;display: flex;justify-content: center;align-items: center;\">\n                        <i class=\"g2-legend-marker\" style=\"width:10px;height:10px;border-radius:50%;display:inline-block;margin-right:10px;background-color: {color};\"></i>\n                        <span class=\"g2-legend-text\"><span  style=\"color:#5E616F; display: inline-block; width: ${_itemWidth};overflow: hidden;text-overflow: ellipsis;white-space: nowrap;vertical-align: bottom;\" title=${_item}>${_item}</span><span style=\"color:#999BA1\"> | ${_percentage}</span><span style=\"color: #5E616F;float:right\">    ${_amounts}</span></span>\n                        </li>`;\n              }}\n            />\n            <Guide>\n              <Html\n                position={[\"50%\", \"50%\"]}\n                html={totalCountsHtml}\n                alignX=\"middle\"\n                alignY=\"middle\"\n              />\n            </Guide>\n            <Geom\n              type=\"intervalStack\"\n              select={false}\n              active={false}\n              position=\"percent\"\n              color={\n                JSON.stringify(data).indexOf('\"item\"') !== -1\n                  ? \"item\"\n                  : \"source\"\n              }\n              style={{\n                lineWidth: 1,\n                stroke: \"#fff\"\n              }}\n            ></Geom>\n          </Chart>\n        ) : (\n          <p\n            style={{\n              minHeight: \"300px\",\n              color: \"red\",\n              textAlign: \"center\",\n              lineHeight: \"300px\"\n            }}\n          >\n            <span>{locale === \"en\" ? \"No Data\" : \"暂无数据\"}</span>\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExhLoop;\n","import React from \"react\";\nimport {\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Legend,\n} from \"bizcharts\";\n\nexport interface ExhLoopProps {\n  data: [];\n  locale: any;\n}\n\nclass ExhBar extends React.Component<ExhLoopProps, any> {\n  constructor(props: Readonly<ExhLoopProps>) {\n    super(props);\n    this.state = {};\n  }\n  //金额格式化\n  formatNum = (num: any) => {\n    return (num + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  render() {\n    const data = this.props.data || [];\n    const { locale } = this.props;\n    const dv = data.map((val: any) => {\n      val.time = val.time.trim() + \" \";\n      return val;\n    });\n    return (\n      <div>\n        {data.length ? (\n          <Chart \n          height={350} \n          padding={[20, 10, 100, 90]} \n          data={dv} \n          scale=\n          {{\n            counts: {\n              minTickInterval:1\n            },\n          }}\n          forceFit>\n            <Coord transpose />\n            <Axis\n              name=\"time\"\n              label={{\n                offset: 12\n              }}\n            />\n            <Axis \n            name=\"counts\"\n            line= {{\n              fill: '#dedede',\n            }}\n            />\n            <Tooltip\n              containerTpl={`<div class=\"g2-tooltip\" style=\"color:#999BA1;\">${\n                this.props.locale === \"en\" ? \"Time\" : \"时间\"\n              }:\n             <span class=\"g2-tooltip-title\" style=\"white-space:nowrap;vertical-align:middle;width:200px;overflow:hidden;display:inline-block;\"></span>\n             <table class=\"g2-tooltip-list\"></table>\n             </div>`}\n              itemTpl={\n                \"<li data-index={index}>\" +\n                '<span style=\"background-color:{color};width:8px;height:8px;border-radius:50%;display:inline-block;margin-right:8px;\"></span>' +\n                \"{name}: {value}\" +\n                \"</li>\"\n              }\n            />\n            <Legend />\n            <Geom\n              type=\"interval\"\n              color=\"#FF9C6E\"\n              size=\"20\"\n              position=\"time*counts\"\n              tooltip={[\n                \"time*counts*amounts*orderExpoAnalysisSourcesVos\",\n                (time, counts, amounts, orderExpoAnalysisSourcesVos) => {\n                  let orderExpoAnalysisSourcesVosString = \"\";\n                  orderExpoAnalysisSourcesVos.forEach(\n                    (val: any) => {\n                      let sourceName =\n                        (val.source === \"1\" &&\n                          (locale === \"en\" ? \"EI\" : \"现场订单系统\")) ||\n                        (val.source === \"2\" &&\n                          (locale === \"en\" ? \"EB\" : \"会展场馆管理系统\")) ||\n                        (val.source === \"3\" &&\n                          (locale === \"en\" ? \"EP\" : \"门禁制证系统\")) ||\n                        (val.source === \"4\" &&\n                          (locale === \"en\" ? \"SP\" : \"智慧停车\")) ||\n                        val.source;\n                      orderExpoAnalysisSourcesVosString =\n                        orderExpoAnalysisSourcesVosString +\n                        \"<br/>\" +\n                        \"<span style='color: #999BA1'>\" +\n                        sourceName +\n                        \"</span>\" +\n                        `: ${\n                          this.props.locale === \"en\"\n                            ? \"Number of orders\"\n                            : \"订单数量\"\n                        }: ` +\n                        val.counts +\n                        `, ${\n                          this.props.locale === \"en\"\n                            ? \"Amount of order\"\n                            : \"订单金额\"\n                        }: ￥` +\n                        this.formatNum(val.amounts);\n                    }\n                  );\n                  amounts = `${counts}  ${\n                    this.props.locale === \"en\" ? \"PCS\" : \"单\"\n                  }, \n                  ${\n                    this.props.locale === \"en\"\n                      ? \"Total amount\"\n                      : \"订单总金额\"\n                  }: ￥${this.formatNum(\n                    amounts\n                  )} ${orderExpoAnalysisSourcesVosString}`;\n                  return {\n                    name:\n                      this.props.locale === \"en\"\n                        ? \"Total number\"\n                        : \"订单总数量\",\n                    value: amounts\n                  };\n                }\n              ]}\n            />\n          </Chart>\n        ) : (\n          <p\n            style={{\n              minHeight: \"300px\",\n              color: \"red\",\n              textAlign: \"center\",\n              lineHeight: \"300px\"\n            }}\n          >\n            <span>{locale === \"en\" ? \"No Data\" : \"暂无数据\"}</span>\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExhBar;\n","import React from \"react\";\nimport { Chart, Geom, Axis, Legend, Tooltip } from \"bizcharts\";\nexport interface LineBarChartsProps {\n  data: any;\n  locale: any;\n}\n\nconst styles: any = (theme: any) => ({\n  wrapper: {\n    textAlign: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  mainTitle: {\n    fontSize: 18,\n    color: \"#333\",\n    display: \"block\",\n    padding: 10\n  },\n  subTitle: {\n    fontSize: 14,\n    color: \"#bbb\",\n    display: \"block\",\n    padding: 10\n  }\n});\n\nclass LineBarCharts extends React.Component<LineBarChartsProps, any> {\n  constructor(props: Readonly<LineBarChartsProps>) {\n    super(props);\n    this.state = {};\n  }\n\n  // 金额格式化\n  formatNum = (num: any) => {\n    return (num + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  render() {\n    const data: any = this.props.data || [];\n    const { locale } = this.props;\n    const dv = data.map((val: any) => {\n      // 元\n      val.totalAmounts = +(val.totalAmounts);\n      val.time = val.time.trim() + \" \";\n      return val;\n    });\n\n    return (\n      <div style={styles.wrapper}>\n        <Chart\n          padding={[50, 100, 100, 80]}\n          height={400}\n          data={dv}\n          scale={{\n            totalAmounts: {\n              min: 0,\n              alias:\n                locale === \"en\"\n                  ? \"Order Amount(yuan)\"\n                  : \"订单金额(元)\",\n              formatter: (val: any) => {\n                return this.formatNum(val);\n              }\n            },\n            num: {\n              min: 0,\n              minTickInterval: 1,\n              alias: locale === \"en\" ? \"Exhibition Times\" : \"展会次数(次)\"\n            },\n            time: {\n              alias: \" \",\n              ticks: dv.length > 12 && [0, 5, 10, 15, 20, 25]\n            }\n          }}\n          forceFit\n        >\n          <Axis name=\"time\" title />\n          <Axis name=\"totalAmounts\" grid={null} />\n          <Axis name=\"num\" grid={null} />\n          <Legend\n            position=\"bottom\"\n            marker=\"square\"\n            offsetY={-window.innerHeight / 80}\n          />\n          <Tooltip\n            containerTpl={`<div class=\"g2-tooltip\" style=\"color:#999BA1;\">${\n              locale === \"en\" ? \"Time\" : \"时间\"\n            }:\n            <span class=\"g2-tooltip-title\" style=\"white-space:nowrap;vertical-align:middle;width:200px;overflow:hidden;display:inline-block;\"></span>\n            <table class=\"g2-tooltip-list\"></table>\n            </div>`}\n            position=\"top\"\n            enterable={true}\n            itemTpl={\n              \"<li data-index={index}>\" +\n              '<span style=\"background-color:{color};width:8px;height:8px;border-radius:50%;display:inline-block;margin-right:8px;\"></span>' +\n              \"{name}: {value}\" +\n              \"</li>\"\n            }\n          />\n          <Geom\n            type=\"interval\"\n            position=\"time*num\"\n            size=\"20\"\n            color=\"#07A7F3\"\n            tooltip={[\n              \"time*num*totalAmounts*totalCounts*orderExpoGeneralDetailVos\",\n              (\n                time,\n                num,\n                totalAmounts,\n                totalCounts,\n                orderExpoGeneralDetailVos\n              ) => {\n                totalCounts = `${num}${\n                  locale === \"en\"\n                    ? \" times, total number of exhibition orders\"\n                    : \"次,  展会订单总数量\"\n                }: ${totalCounts}`;\n                return {\n                  name: locale === \"en\" ? \"Number of exhibitions\" : \"展会次数\",\n                  value: totalCounts\n                };\n              }\n            ]}\n          />\n          <Geom\n            type=\"line\"\n            position=\"time*totalAmounts\"\n            color=\"#FC5B5B\"\n            tooltip={[\n              \"time*num*totalAmounts*totalCounts*orderExpoGeneralDetailVos\",\n              (\n                time,\n                num,\n                totalAmounts,\n                totalCounts,\n                orderExpoGeneralDetailVos\n              ) => {\n                let orderExpoAnalysisSourcesVosString = \"\";\n                orderExpoGeneralDetailVos.map((val: any) => {\n                  orderExpoAnalysisSourcesVosString =\n                    orderExpoAnalysisSourcesVosString +\n                    \"<br/>\" +\n                    \"<span style='color: #999BA1'>\" +\n                    val.expoName +\n                    \"</span>\" +\n                    `, ${locale === \"en\" ? \"Number of orders\" : \"订单数量\"}: ` +\n                    val.totalCounts +\n                    `, ${locale === \"en\" ? \"Amount of order\" : \"订单金额\"}: ￥` +\n                    this.formatNum(val.totalAmounts);\n                    return orderExpoAnalysisSourcesVosString;\n                });\n                num = `${\n                  locale === \"en\"\n                    ? \"Total amount of exhibition orders (Yuan)\"\n                    : \"展会订单总金额(元)\"\n                }`;\n                totalAmounts = `￥${this.formatNum(totalAmounts)} ${orderExpoAnalysisSourcesVosString}`;\n                return {\n                  name: num,\n                  value: totalAmounts\n                };\n              }\n            ]}\n          />\n        </Chart>\n      </div>\n    );\n  }\n}\n\nexport default LineBarCharts;\n","import { withStyles } from \"@material-ui/styles\";\nimport { Divider, Select, Icon } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExhLoop from \"./exh_loop\";\nimport ExhBar from \"./exh_bar\";\nimport LineBarCharts from \"./linebar_charts\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport interface exhProps {\n  classes: any;\n  match: any;\n  history: any;\n  locale: any;\n  getOrderList: any;\n  list: any;\n  getExhList: any;\n  exhAnalysisInfo: any;\n  exhOverviewInfo: any;\n  exhAnalysis: any;\n  exhOverview: any;\n  exhList: any;\n}\n\nconst { Option } = Select;\nconst styles: any = (theme: any) => ({\n  title: {\n    fontSize: \"16px\",\n    color: \"#33353D\"\n  },\n  root: {\n    margin: \"20px 20px 0 20px\",\n    backgroundColor: \"#FFFFFF\",\n    \"& .HeaderInfoBox\": {\n      display: \"flex\",\n      height: 70,\n      marginLeft: 30,\n      \"& .headerDivider\": {\n        margin: \"25px 64px 0\",\n        height: \"2.5em\"\n      }\n    }\n  },\n  DonutPanelGroup: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px\"\n  },\n  rootDonutPanel: {\n    width: \"50%\",\n    height: 350,\n    backgroundColor: \"#FFFFFF\"\n  },\n  boldNum: {\n    fontSize: \"30px\",\n    color: \"#33353D\"\n  },\n  chartsOption: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  radioItem: {\n    marginLeft: \"30px\",\n    \"& .ant-radio-button-wrapper\": {\n      minWidth: \"82px\",\n      textAlign: \"center\"\n    }\n  },\n  selected: {\n    display: \"inline-block !important\"\n  },\n  unselected: {\n    display: \"none !important\"\n  },\n  increase: {\n    paddingLeft: \"30px\",\n    color: \"#5E616F\",\n    \"& span i\": {\n      display: \"inline-block\",\n      width: \"12px\",\n      height: \"12px\",\n      margin: \"0 8px 0 5px\",\n      borderRadius: \"2px\"\n    }\n  }\n});\n\nclass Orderanal extends React.Component<exhProps, any> {\n  constructor(props: Readonly<exhProps>) {\n    super(props);\n    this.state = {\n      exhYear: 2019,\n      exhNameList: [],\n      exhName: null,\n      totalCounts: null,\n      totalAmounts: null,\n      orderExpoAnalysisItemsVos: null,\n      orderExpoAnalysisTrendsVos: null,\n      exhOverviewYear: 2019,\n      exhOverviewData: null,\n      selectYear: 2019,\n      selectMonth: \"\",\n      currYear: 2019,\n      currMonth: null,\n      exhTotalTimes: null,\n      exhTotalAmount: null,\n      exhTotalAmountPrecent: null,\n      maxTotalAmount: null,\n      expoGeneral: null,\n      defaultExhName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const { getExhList, exhAnalysis, exhOverview } = this.props;\n    const { exhYear, exhName } = this.state;\n    const date = new Date();\n    const currYear = date.getFullYear();\n    const currMonth = date.getMonth() + 1;\n\n    this.setState({\n      currYear: currYear,\n      currMonth: currMonth\n    });\n    getExhList({\n      params: {\n        year: exhYear\n      },\n      cb: (type: any, data: any) => {\n        const { exhList } = this.props;\n        this.setState(\n          {\n            exhNameList: exhList,\n            defaultExhName: exhList.length && exhList[0]\n          },\n          () => {\n            this.getOrderAnalyseData();\n          }\n        );\n      }\n    });\n\n    exhAnalysis({\n      params: {\n        expoName: exhName\n      },\n      cb: (type: any, data: any) => {}\n    });\n\n    exhOverview({\n      params: {\n        year: 2019\n      },\n      cb: (type: any, data: any) => {\n        this.setState({\n          exhTotalTimes: data && data.data.data.expoCounts,\n          exhTotalAmount: data && data.data.data.expoAmounts,\n          exhTotalAmountPrecent: data && data.data.data.percentage,\n          maxTotalAmount: data && data.data.data.expoHisAmounts,\n          expoGeneral: data && data.data.data.orderExpoGeneralVos\n        });\n      }\n    });\n  }\n\n  // 金额格式化\n  formatNum = (num: any) => {\n    return (num + \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  chooseYear: any = () => {\n    const { getExhList, locale } = this.props;\n    const { exhYear } = this.state;\n    getExhList({\n      params: {\n        year: exhYear\n      },\n      cb: (type: any, data: any) => {\n        const { exhList } = this.props;\n        this.setState({\n          exhNameList: exhList,\n          defaultExhName: locale === \"en\" ? \"Please select\" : \"请选择\"\n        });\n      }\n    });\n  };\n\n  getOverviewInfo: any = () => {\n    const { exhOverview } = this.props;\n    const { exhOverviewYear } = this.state;\n    exhOverview({\n      params: {\n        year: exhOverviewYear\n      },\n      cb: (type: any, data: any) => {\n        const { exhOverviewInfo } = this.props;\n        this.setState({\n          exhOverviewData: exhOverviewInfo\n        });\n      }\n    });\n  };\n\n  getExhTimesData = () => {\n    const { exhOverview } = this.props;\n    exhOverview({\n      params: {\n        year: this.state.selectYear,\n        month: this.state.selectMonth\n      },\n      cb: (type: any, data: any) => {\n        this.setState({\n          exhTotalTimes: data.data.data.expoCounts,\n          exhTotalAmount: data.data.data.expoAmounts,\n          exhTotalAmountPrecent: data.data.data.percentage,\n          maxTotalAmount: data.data.data.expoHisAmounts,\n          expoGeneral: data.data.data.orderExpoGeneralVos\n        });\n      }\n    });\n  };\n\n  getOrderAnalyseData = () => {\n    const { exhAnalysis } = this.props;\n    exhAnalysis({\n      params: {\n        expoName: this.state.defaultExhName\n      },\n      cb: (type: any, data: any) => {\n        const { exhAnalysisInfo } = this.props;\n        if (exhAnalysisInfo.data.orderExpoAnalysisItemsVos) {\n          for (\n            let i = 0;\n            i < exhAnalysisInfo.data.orderExpoAnalysisItemsVos.length;\n            i++\n          ) {\n            exhAnalysisInfo.data.orderExpoAnalysisItemsVos[i].percentage *= 1;\n          }\n        }\n\n        this.setState({\n          totalCounts: exhAnalysisInfo.data.totalCounts,\n          totalAmounts: exhAnalysisInfo.data.totalAmounts,\n          orderExpoAnalysisItemsVos:\n            exhAnalysisInfo.data.orderExpoAnalysisItemsVos,\n          orderExpoAnalysisTrendsVos:\n            exhAnalysisInfo.data.orderExpoAnalysisTrendsVos\n        });\n      }\n    });\n  };\n\n  // 选择会展名称后的函数\n  selectExhName = (value: any) => {\n    this.setState({ exhName: value, defaultExhName: value }, () => {\n      this.getOrderAnalyseData();\n    });\n  };\n\n  setCurrYear = (val: any) => {\n    const currDate = new Date();\n\n    let currMonth = currDate.getMonth() + 1;\n    let year = currDate.getFullYear();\n    this.setState(\n      {\n        currMonth: val * 1 === year ? currMonth : 12,\n        selectYear: val * 1\n      },\n      () => {\n        this.getExhTimesData();\n      }\n    );\n  };\n\n  setCurrMonth = (val: any) => {\n    this.setState(\n      {\n        selectMonth: val * 1\n      },\n      () => {\n        this.getExhTimesData();\n      }\n    );\n  };\n\n  render() {\n    const { classes, locale } = this.props;\n    const {\n      exhNameList,\n      orderExpoAnalysisItemsVos,\n      orderExpoAnalysisTrendsVos,\n      totalCounts,\n      expoGeneral,\n      defaultExhName\n    } = this.state;\n    const monthArr: any =\n      locale === \"en\"\n        ? [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n          ]\n        : [\n            \"1月\",\n            \"2月\",\n            \"3月\",\n            \"4月\",\n            \"5月\",\n            \"6月\",\n            \"7月\",\n            \"8月\",\n            \"9月\",\n            \"10月\",\n            \"11月\",\n            \"12月\"\n          ];\n    return (\n      <div>\n        <div className={classes.root}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"0 20px 0 20px\",\n              marginBottom: 10,\n              height: 56,\n              borderBottom: \"1px solid #dddddd\"\n            }}\n          >\n            <FormattedMessage\n              id=\"order.exhibitionTime\"\n              defaultMessage=\"Exhibition time：\"\n            ></FormattedMessage>\n            <Select\n              placeholder={locale === \"en\" ? \"Please select\" : \"请选择\"}\n              getPopupContainer={triggerNode => triggerNode}\n              style={{ width: 100 }}\n              defaultValue={2019}\n              onChange={(value: any) => {\n                this.setState(\n                  {\n                    exhYear: value\n                  },\n                  () => this.chooseYear()\n                );\n              }}\n            >\n              <Option value=\"2019\">2019</Option>\n              <Option value=\"2020\">2020</Option>\n              <Option value=\"2021\">2021</Option>\n              <Option value=\"2022\">2022</Option>\n            </Select>\n            <span style={{ marginLeft: 42 }}>\n              <FormattedMessage\n                id=\"order.exhibitionName\"\n                defaultMessage=\"Exhibition name\"\n              />\n              ：\n            </span>\n            <Select\n              placeholder={locale === \"en\" ? \"Please select\" : \"请选择\"}\n              style={{ width: 200 }}\n              getPopupContainer={triggerNode => triggerNode}\n              onChange={this.selectExhName}\n              value={defaultExhName}\n            >\n              {exhNameList &&\n                exhNameList.map((item: any, index: number) => {\n                  return (\n                    <Select.Option title={item} key={index} value={item}>\n                      {item}\n                    </Select.Option>\n                  );\n                })}\n            </Select>\n          </div>\n          <div className=\"HeaderInfoBox\">\n            <div>\n              <p>\n                <FormattedMessage\n                  id=\"order.totalNumberOfExhibitionOrders\"\n                  defaultMessage=\"Total number of exhibition orders\"\n                />\n              </p>\n              <b className={classes.boldNum}>{this.state.totalCounts || 0}</b>\n            </div>\n            <Divider className=\"headerDivider\" type=\"vertical\" />\n            <div>\n              <p>\n                <FormattedMessage\n                  id=\"order.totalAmountofExhibitionOrders\"\n                  defaultMessage=\"Total amount of exhibition orders (Yuan)\"\n                />\n              </p>\n              <b className={classes.boldNum}>\n                {(this.state.totalAmounts &&\n                  \"￥\" + this.formatNum(this.state.totalAmounts)) ||\n                  0}\n              </b>\n            </div>\n          </div>\n\n          <div className={classes.DonutPanelGroup}>\n            <div className={classes.rootDonutPanel}>\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <span style={{ color: \"#08ABF8\", marginRight: 6 }}>●</span>\n                <span style={{ fontSize: 16, color: \"#33353D\" }}>\n                  <FormattedMessage\n                    id=\"order.exhibitionOrderTrendAnalysis\"\n                    defaultMessage=\"Trend analysis\"\n                  />\n                </span>\n              </div>\n              {orderExpoAnalysisTrendsVos && (\n                <div\n                  style={{\n                    margin: \"10px 0px -18px 0px\",\n                    fontSize: 12,\n                    color: \"rgba(183,183,183,1)\"\n                  }}\n                >\n                  <FormattedMessage id=\"order.time\" defaultMessage=\"Time\" />\n                </div>\n              )}\n              <ExhBar data={orderExpoAnalysisTrendsVos} locale={locale} />\n              {orderExpoAnalysisTrendsVos && (\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    marginTop: \"-77px\"\n                  }}\n                >\n                  <div></div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      width: locale === \"en\" ? \"150px\" : \"87px\"\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"inlineBlock\",\n                        width: \"20px\",\n                        height: \"10px\",\n                        background: \"#FF9C6E\",\n                        borderRadius: \"2px\"\n                      }}\n                    ></div>\n                    <span style={{ color: \"rgba(90,90,90,1)\" }}>\n                      <FormattedMessage\n                        id=\"order.orderQuantity\"\n                        defaultMessage=\"Number of orders\"\n                      />\n                    </span>\n                  </div>{\" \"}\n                  <div style={{ fontSize: 12, color: \"rgba(183,183,183,1)\" }}>\n                    <FormattedMessage\n                      id=\"order.number\"\n                      defaultMessage=\"Number\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className={classes.rootDonutPanel}>\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <span style={{ color: \"#08ABF8\", marginRight: 6 }}>●</span>\n                <span style={{ fontSize: 16, color: \"#33353D\" }}>\n                  <FormattedMessage\n                    id=\"order.exhibitionServiceProjectAnalysis\"\n                    defaultMessage=\"Services items analysis\"\n                  />\n                </span>\n              </div>\n              <ExhLoop\n                totalCounts={totalCounts}\n                data={orderExpoAnalysisItemsVos}\n                locale={locale}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* 开展次数概览部分 */}\n        <div className={classes.root}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"0 20px 0 20px\",\n              marginBottom: 10,\n              height: 56,\n              borderBottom: \"1px solid #dddddd\"\n            }}\n          >\n            <b\n              style={{\n                color: \"#33353D\",\n                fontSize: \"17px\",\n                marginRight: \"100px\"\n              }}\n            >\n              <FormattedMessage\n                id=\"order.exhibitionTimesOverview\"\n                defaultMessage=\"Number of exhibitions overview\"\n              />\n            </b>\n            <span>\n              <FormattedMessage\n                id=\"order.annualOrder\"\n                defaultMessage=\"Annual orders：\"\n              />\n            </span>\n            <Select\n              placeholder=\"请选择\"\n              defaultValue=\"2019\"\n              getPopupContainer={triggerNode => triggerNode}\n              style={{ width: 100 }}\n              onChange={this.setCurrYear}\n            >\n              <Option value=\"2019\">2019</Option>\n              <Option value=\"2020\">2020</Option>\n              <Option value=\"2021\">2021</Option>\n              <Option value=\"2022\">2022</Option>\n            </Select>\n            <Divider\n              className=\"headerDivider\"\n              type=\"vertical\"\n              style={{ margin: \"0 20px\" }}\n            />\n            <span>\n              <FormattedMessage\n                id=\"order.MonthlyOrder\"\n                defaultMessage=\"Monthly orders：\"\n              />\n            </span>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 200 }}\n              defaultValue=\"\"\n              getPopupContainer={triggerNode => triggerNode}\n              onChange={this.setCurrMonth}\n            >\n              <Select.Option key={\"year\"} value=\"\">\n                {locale === \"en\" ? \"Annual\" : \"全年\"}\n              </Select.Option>\n              {monthArr.map((item: any, key: any) => (\n                <Select.Option key={key} value={key + 1}>\n                  {item}\n                </Select.Option>\n              ))}\n            </Select>\n          </div>\n          <div className=\"HeaderInfoBox\">\n            <div>\n              <p>\n                <FormattedMessage\n                  id=\"order.exhibitionsTotalNumber\"\n                  defaultMessage=\"Total number of exhibitions\"\n                />\n              </p>\n              <b className={classes.boldNum}>{this.state.exhTotalTimes || 0}</b>\n            </div>\n            <Divider className=\"headerDivider\" type=\"vertical\" />\n            <div>\n              <p>\n                <span>\n                  <FormattedMessage\n                    id=\"order.exhibitionTotalAmount\"\n                    defaultMessage=\"Total amount of exhibitions\"\n                  />\n                </span>\n                <span\n                  title={\n                    locale === \"en\" ? \"Year-on-year Growth\" : \"同比去年增长\"\n                  }\n                  style={{\n                    display: \"inline-block\",\n                    textDecoration: \"none\",\n                    color: \"#5E616E\",\n                    paddingLeft: \"10px\"\n                  }}\n                >\n                  {this.state.exhTotalAmountPrecent < 0 ? (\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        color: \"#02B583\",\n                        width: \"16px\",\n                        textAlign: \"center\"\n                      }}\n                    >\n                      <Icon type=\"down-square\" />\n                    </span>\n                  ) : (\n                    <span\n                      style={{\n                        display: \"inline-block\",\n                        color: \"red\",\n                        width: \"16px\",\n                        textAlign: \"center\"\n                      }}\n                    >\n                      <Icon type=\"up-square\" />\n                    </span>\n                  )}\n                  <span>{this.state.exhTotalAmountPrecent + \"%\"}</span>\n                </span>\n              </p>\n              <b className={classes.boldNum}>\n                {+this.state.exhTotalAmount\n                  ? \"￥\" + this.formatNum(this.state.exhTotalAmount)\n                  : 0}\n              </b>\n            </div>\n            <Divider className=\"headerDivider\" type=\"vertical\" />\n            <div>\n              <p>\n                <FormattedMessage\n                  id=\"order.highestTotalAmountHistory\"\n                  defaultMessage=\"Top amount in history (Yuan)\"\n                />\n              </p>\n              <b className={classes.boldNum}>\n                {+this.state.maxTotalAmount\n                  ? \"￥\" + this.formatNum(this.state.maxTotalAmount)\n                  : 0}\n              </b>\n            </div>\n          </div>\n          <div style={{ position: \"relative\" }}>\n            <span\n              style={{\n                fontSize: \"12px\",\n                color: \"#bfbfbf\",\n                position: \"absolute\",\n                top: \"5%\",\n                left: \"3%\"\n              }}\n            >\n              {locale === \"zh\" ? \"展会次数(次)\" : \"Exhibition Times\"}\n            </span>\n            <span\n              style={{\n                fontSize: \"12px\",\n                color: \"#bfbfbf\",\n                position: \"absolute\",\n                top: \"5%\",\n                left: \"90%\"\n              }}\n            >\n              {locale === \"zh\" ? \"订单金额(元)\" : \"Amount of order\"}\n            </span>\n            <LineBarCharts data={expoGeneral} locale={locale} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState2Props = ({\n  exh: { exhList, exhAnalysisInfo, exhOverviewInfo, exhTimesData },\n  intl: { locale }\n}: any) => ({\n  exhList,\n  exhAnalysisInfo,\n  exhOverviewInfo,\n  exhTimesData,\n  locale\n});\n\nconst mapDispatch2Props = ({\n  exh: { getExhList, exhAnalysis, exhOverview, exhTimesData }\n}: any) => ({\n  getExhList,\n  exhAnalysis,\n  exhOverview,\n  exhTimesData\n});\n\nexport default withStyles(styles)(\n  connect(\n    mapState2Props,\n    mapDispatch2Props\n  )(Orderanal)\n);\n"],"sourceRoot":""}